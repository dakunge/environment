1. golang 1.5  以后 map 必须用户自己保证线程安全，如果出现并发panic，无并发没问题，因为编译检测不出来所以要时刻注意
2. 切片做参数传递的是引用的值，形参无法改变底层数组的结构，只能改变底层数组里面的值
3. := 左边有多个参数时，如果某个参数之前被定义过，而且不在同一个作用域中，会创建新的参数

```
func main() {
    a := 0
    switch {
    case a == 0:
        a, err := xxx()
    }
    fmt.Println(a) //无论xxx()返回值是什么，都打印出0
}

func main() {
    a := 0
    a, err := xxx()
    fmt.Println(a) //xxx()返回什么值，打印什么值
}
```



